
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/maps/plot_cartproj.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_maps_plot_cartproj.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_maps_plot_cartproj.py:


Cartopy: Test regional projections
=============================================

.. GENERATED FROM PYTHON SOURCE LINES 5-50



.. image-sg:: /gallery/maps/images/sphx_glr_plot_cartproj_001.png
   :alt: AlbersEqualArea, EquidistantConic, LambertConformal, LambertCylindrical, RotatedPole
   :srcset: /gallery/maps/images/sphx_glr_plot_cartproj_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 2000x310 with 5 Axes>





|

.. code-block:: default

    import pygeode as pyg, numpy as np, pylab as pyl
    from cartopy import crs as ccrs
    import cartopy

    lat = pyg.gausslat(40)
    lon = pyg.regularlon(80, origin=-180)

    x = pyg.sin(2*np.pi * lon / 180.) * pyg.exp(-(lat - 30)**2 / (2*10**2))
    y = pyg.sin(2*np.pi * lon / 180.) * pyg.exp(-(lat + 40)**2 / (2*10**2))

    pyl.ioff()

    prj_grid = ['PlateCarree', 'Mercator', 'Miller', 'TransverseMercator']
    prj_reg  = ['AlbersEqualArea', 'EquidistantConic', 'LambertConformal', \
                'LambertCylindrical', 'RotatedPole']
    prj_glob = ['AzimuthalEquidistant', 'Mollweide', 'Orthographic',  \
                'Stereographic', 'Robinson', 'Sinusoidal', \
                'Geostationary', 'LambertAzimuthalEqualArea', 'EckertIII']
        
    prj = dict(central_longitude=60.)
    gridlines = dict(draw_labels = False, xlocs = range(0, 361, 30), ylocs = range(-80, 81, 20)),
    map = dict(gridline = gridlines)

    i = 0
    axr = []

    for p in prj_reg[:]:
        if i == 5:
            axg.append(axr)
            axr = []
            i = 0

        ax = pyg.plot.CartopyAxes(projection = p)#, prj_args = prj)

        pyg.vquiver(x, y, axes = ax, map = map)
        ax.size = [4., 3.1]
        ax.setp(title = p)
        ax.set_extent([10, 70, -60, 20], crs = ccrs.PlateCarree())
        axr.append(ax)
        i += 1

    ax = pyg.plot.grid([axr])

    pyl.ion()
    ax.render(2)


.. _sphx_glr_download_gallery_maps_plot_cartproj.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_cartproj.py <plot_cartproj.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_cartproj.ipynb <plot_cartproj.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
