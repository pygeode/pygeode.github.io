
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/advanced/plot_sigmask.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_advanced_plot_sigmask.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_advanced_plot_sigmask.py:


Plot a significance mask
========================
Compute a linear regression using :func:`pygeode.regress` and use :func:`pygeode.vsigmask` to plot significance

.. GENERATED FROM PYTHON SOURCE LINES 6-41

.. code-block:: default

    import pygeode as pyg, numpy as np
    import pylab as pyl
    pyl.ioff()

    from pygeode.tutorial import t3

    # Compute regression 
    reg = pyg.regress(t3.X1e, t3.Y1, ['time'], output='m,b,r2,p')


    pyl.ioff()

    # The significance mask routine takes a signed significance mask as it's main
    # argument. This ensures that regions of significance on opposite sides of the
    # distribution are separated by a filled region. It can be computed as follows
    # from the p-value of the linear regression.
    sigmask = (1 - 0.5*reg.p) * pyg.sign(reg.m)

    ax1 = pyg.showvar(reg.m, fig=1)
    pyg.vsigmask(sigmask, ax1.axes[0], mjsig = 0.99)

    ax1.axes[0].setp(title = '(a) Significant regions (99%) stippled')

    ax2 = pyg.showvar(reg.m, fig=1)
    pyg.vsigmask(sigmask, ax2.axes[0], \
                    mjsig = 0.95, mjsigp = dict(visible = False), \
                    nsigp = dict(alpha = 0.4, hatch = None, color = 'k'))

    ax2.axes[0].setp(title = '(b) Non-significant regions (95%) shaded')

    ax = pyg.plot.grid([[ax1], [ax2]])
    pyl.ion()

    ax.render()




.. image-sg:: /gallery/advanced/images/sphx_glr_plot_sigmask_001.png
   :alt: (a) Significant regions (99%) stippled, (b) Non-significant regions (95%) shaded
   :srcset: /gallery/advanced/images/sphx_glr_plot_sigmask_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/peterh/pygeode/pygeode/plot/wrappers.py:320: MatplotlibDeprecationWarning: You have passed the 'alpha' kwarg before the 'color' kwarg.  Artist.set() currently reorders the properties to apply 'color' first, but this is deprecated since 3.3 and will be removed two minor releases later; please pass 'color' first instead.
      else: pyl.setp([coll[i] for i in self.ind], **self.plot_kwargs)

    <Figure size 720x960 with 4 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 42-44

``reg`` contains a dataset of values from the regression


.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: default


    print(reg)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <Dataset>:
    Vars:
      m  (lon,lat)  (60,42)
      b  (lon,lat)  (60,42)
      r2 (lon,lat)  (60,42)
      p  (lon,lat)  (60,42)
    Axes:
      lon <Lon>      :  0 E to 354 E (60 values)
      lat <Lat>      :  87 S to 87 N (42 values)
    Global Attributes:
      description    : linear regression parameters for Y1 regressed against X1e





.. _sphx_glr_download_gallery_advanced_plot_sigmask.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_sigmask.py <plot_sigmask.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_sigmask.ipynb <plot_sigmask.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
